

function readablesize(size)
{
    // byte, kilobyte, megabyte, gigabyte, terabyte, petabyte, exabyte, zettabyte
    // the last two seem... unlikely, tbh
    const units = ['B', 'K', 'M', 'G', 'T', 'P', 'E', 'Z']
    if(size == 0)
    {
        return '0B'
    }
    var exp = (Math.log(size) / Math.log(1024))
    if(exp > 6)
    {
        exp = 6
    }
    return (`${(size / (Math.pow(1024, exp)))}${units[exp]}`)
}

function walk(dn, fn)
{
    for(ent in Dir.read(dn))
    {
        var contwalk = false;
        var fwd = true;
        //var suff = ""
        //var pref = "[FILE]"
        if(ent.type == 4)
        {
            contwalk = true;
            if(ent.name == "." || ent.name == "..")
            {
                fwd = false;
                contwalk = false;
            }
            //suff = "/"
            //pref = "[DIR] "
        }
        var fullpath = `${dn}/${ent.name}`
        var st = File.stat(fullpath)
        var ssize = 0
        if(st == null)
        {
            println("could not stat '", fullpath, "'");
        }
        else
        {
            ssize = st.size
        }
        if(fwd)
        {
            fn(ssize, fullpath);
        }
        if(contwalk)
        {
            println("iterating '", fullpath, "' ...");
            walk(fullpath, fn);
        }
    }
}

var totalsz = 0;
var starthere = (args[1] != null) ? args[1] : "."

walk(starthere, function(sz, name)
{
    totalsz += sz;
    //println(pref, " ",  readablesize(sz) " ", name, suff)
})
println("total size: ", readablesize(totalsz))
