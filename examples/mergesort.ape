function shift(arr) {
    var res = arr[0]
    remove_at(arr, 0)
    return res
}

function merge(left, right) {
    var arr = []
    while (len(left) > 0 && len(right) > 0) {
        if (left[0] < right[0]) {
            var item = shift(left)
            append(arr, item)            
        } else {
            var item = shift(right)
            append(arr, item)
        }
    }
    concat(arr, left)
    concat(arr, right)
    return arr
}

function split(arr, at) {
    var left = []
    var right = []
    for (var i = 0; i < len(arr); i++) {
        if (i < at) {
            append(left, arr[i])
        } else {
            append(right, arr[i])
        }
    }
    return { left: left, right: right }
}

function mergeSort(arr) {
    const half = len(arr) / 2
    
    if (len(arr) < 2) {
        return arr 
    }
    
    const splitted = split(arr, half)
    return merge(mergeSort(splitted.left), mergeSort(splitted.right))
}

var arr_len = 1<<18
var arr = []
for (var i = 0; i < arr_len; i++) {
    var num = floor(random())
    append(arr, num)
}

var sorted = mergeSort(arr)

for (var i = 0; i < arr_len - 1; i++) {
    assert(sorted[i] <= sorted[i + 1])
}
