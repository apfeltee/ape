
fn vec3(x, y, z) {
    return {
        x: x,
        y: y,
        z: z,
        __operator_add__: fn(a, b) {
            return vec3(a.x + b.x, a.y + b.y, a.z + b.z)
        },
        __operator_mul__: fn(a, b) {
            if (is_number(b)) {
                return vec3(a.x * b, a.y * b, a.z * b)
            } else if (is_number(a)) {
                return vec3(a * b.x, a * b.y, a * b.z)
            }
            assert(false)
        },
        __operator_mod__: fn(a, b) {
            return a.x * b.x + a.y * b.y + a.z * b.z
        },
        __operator_xor__: fn(a, b) {
            var v = vec3(0, 0, 0)
            v.x = (a.y * b.z) - (b.y * a.z)
            v.y = (a.z * b.x) - (b.z * a.x)
            v.z = (a.x * b.y) - (b.x * a.y)
            return v
        },
        __operator_bang__: fn(a) {
            return a * (1 / sqrt(a % a))
        }
    }
}


println(vec3)

